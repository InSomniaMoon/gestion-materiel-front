# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Frontend CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
      - run: npm ci --legacy-peer-deps
      - run: npm run build -c production
      # - run: npm test
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist
          retention-days: 1

  deploy-app:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUB_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa.pub
          ssh-keyscan -p 2222 -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
      - name: sync code to server
        run: rsync -e 'ssh -p 2222' -rt --delete frontend/browser/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/gestion_materiel/front/dist/frontend/browser/
      - run: ssh -p 2222 -o StrictHostKeyChecking=no -x ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cd ~/gestion_materiel/front && git pull'
